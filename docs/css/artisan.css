@charset "UTF-8";
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
.calendar {
  display: block;
  padding: 0; }
  .calendar section {
    margin-bottom: 10px;
    border: 1px solid #90939b;
    padding: 0; }
  .calendar h6 {
    font-size: 20px;
    font-weight: 100;
    background: #75787b;
    color: #ffffff;
    padding: 8px 10px 8px 10px;
    margin: 0; }
  .calendar ul {
    display: block;
    background: #f4f4f4;
    font-size: 11px;
    width: 100%;
    min-width: 260px; }
    .calendar ul > .week {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -ms-flex-pack: distribute;
          justify-content: space-around;
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch; }
      .calendar ul > .week > .cell {
        display: block;
        position: relative;
        max-width: 14.28%;
        min-height: 40px;
        line-height: 40px;
        padding: 20px 4px 4px 4px;
        -webkit-box-sizing: border-box;
                box-sizing: border-box;
        text-align: right;
        -webkit-box-flex: 0;
            -ms-flex: 0 0 14.28%;
                flex: 0 0 14.28%; }
        .calendar ul > .week > .cell.status-blue {
          background: #1684FB;
          color: white; }
        .calendar ul > .week > .cell.status-red {
          background: #F21500;
          color: white; }
        .calendar ul > .week > .cell.status-yellow {
          background: #ffe200;
          color: white; }
        .calendar ul > .week > .cell.status-orange {
          background: #FF6435;
          color: white; }
        .calendar ul > .week > .cell.status-light-orange {
          background: #FF9700;
          color: white; }
        .calendar ul > .week > .cell.status-green {
          background: #4BAF4F;
          color: white; }
        .calendar ul > .week > .cell.status-light-green {
          background: #8BC24A;
          color: white; }
        .calendar ul > .week > .cell.status-purple {
          background: #7A70E4;
          color: white; }
        .calendar ul > .week > .cell.status-azur {
          background: #53E2DD;
          color: white; }
        .calendar ul > .week > .cell.status-light-blue {
          background: #03A9F4;
          color: white; }
      .calendar ul > .week .cell + .cell {
        border-left: 1px solid #d0d3db; }
      .calendar ul > .week:first-child {
        background: #75787b;
        color: #ffffff; }
        .calendar ul > .week:first-child > .cell {
          min-height: 25px;
          line-height: 12px;
          border-color: #90939b;
          padding-top: 4px; }
    .calendar ul .week + .week {
      border-top: 1px solid #d0d3db; }
  .calendar .num {
    display: block;
    position: absolute;
    min-width: 16px;
    height: 16px;
    right: 3px;
    top: 3px;
    text-align: center;
    line-height: 16px; }
  .calendar .day {
    background: #ffffff;
    color: #111111;
    /*
			& > .num {
				display: block;
				position: absolute;
				min-width: 16px;
				height: 16px;
				right: 3px;
				top: 3px;
				text-align: center;
				line-height: 16px;
			}
			*/ }
    .calendar .day.active {
      background: #fff79a;
      cursor: pointer; }
      .calendar .day.active:hover {
        background: #03a9f4;
        color: white; }
        .calendar .day.active:hover .task {
          background: #ffffff; }
    .calendar .day > .hours {
      display: none;
      position: absolute;
      top: 50%;
      left: 50%;
      text-align: center;
      -webkit-transform: translate3d(-50%, -50%, 0px);
              transform: translate3d(-50%, -50%, 0px); }
    .calendar .day.today > .num {
      background: red;
      color: #fff;
      border-radius: 9px; }
  .calendar .tasks {
    display: block;
    position: relative;
    padding: 3px 0;
    line-height: 0;
    text-align: right; }
    .calendar .tasks > .task {
      display: inline-block;
      position: relative;
      background: #444;
      width: 4px;
      height: 4px;
      margin: 0 2px 3px 0;
      border-radius: 2px;
      /*
				width: 6px;
				height: 6px;
				border-radius: 3px;
				left: 3px;
				top: 3px;
				*/ }
      .calendar .tasks > .task.working {
        background: #4BAF4F; }

.calendar-slider {
  /*
			overflow: hidden;
			margin-left: -15px;
			margin-right: -15px;
			margin-top: -15px;
			margin-bottom: 15px;

			.inner {
				display: flex;
				justify-content: flex-start;
				align-items: baseline;

				& > section {
					width: 400px;
				}
			}
			*/ }
  .calendar-slider section {
    border: none;
    margin-bottom: 0;
    border-bottom: 1px solid #d0d3db; }
  .calendar-slider section + section {
    border-left: 1px solid #d0d3db; }
  .calendar-slider .cell {
    background: transparent; }
    .calendar-slider .cell.day {
      background: #f8f8f8; }
    .calendar-slider .cell.workable {
      background: white; }
    .calendar-slider .cell.working {
      background: #80bdff; }
    .calendar-slider .cell.available:hover {
      background: #007bff; }
    .calendar-slider .cell.full {
      background: #fbb9b3; }

.calendar-planner {
  margin: -20px -15px !important; }
  .calendar-planner h6 {
    text-transform: uppercase;
    font-size: 22px; }
  .calendar-planner ul > .week {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -webkit-box-align: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
    .calendar-planner ul > .week > .cell {
      max-width: 12.5%;
      -webkit-box-flex: 0;
          -ms-flex: 0 0 12.5%;
              flex: 0 0 12.5%;
      min-height: 80px;
      line-height: 20px;
      padding: 20px 4px 4px 4px;
      text-align: right; }
  .calendar-planner .cell {
    background: transparent;
    pointer-events: none;
    /*
			&.full {
				background: mix(map-get($mainColors, danger), white, 30%);
			}
			*/ }
    .calendar-planner .cell.holiday {
      background: #ffe0b3; }
    .calendar-planner .cell.vacation {
      background: #a5d7a7; }
    .calendar-planner .cell.working {
      background: white;
      pointer-events: auto; }
    .calendar-planner .cell.unworkable {
      background: #c9e7ca; }
    .calendar-planner .cell.selected {
      -webkit-box-shadow: 0 0 0 2px #75787b inset;
              box-shadow: 0 0 0 2px #75787b inset; }
    .calendar-planner .cell:hover {
      -webkit-transition: background ease-in-out 250ms;
      transition: background ease-in-out 250ms;
      background: #d9f2fd; }
    .calendar-planner .cell.weekNum {
      background: #676a6d;
      color: white;
      font-size: 18px;
      pointer-events: auto; }
      .calendar-planner .cell.weekNum .num {
        position: absolute;
        top: 20px;
        right: 10px;
        line-height: 1;
        height: auto; }
      .calendar-planner .cell.weekNum:hover {
        background: #7e8083; }
  .calendar-planner .activities {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    position: relative;
    padding: 3px 0;
    line-height: 0;
    text-align: right; }
    .calendar-planner .activities > .activity {
      display: inline-block;
      position: relative;
      -ms-flex-preferred-size: 0;
          flex-basis: 0;
      -webkit-box-flex: 1;
          -ms-flex-positive: 1;
              flex-grow: 1;
      margin: 0 2px 3px 0;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: left;
      text-align: right; }
      .calendar-planner .activities > .activity.working {
        background: #4BAF4F; }
  .calendar-planner .records {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    position: relative;
    padding: 3px 0;
    line-height: 0;
    text-align: right; }
    .calendar-planner .records > .record {
      display: inline-block;
      position: relative;
      -ms-flex-preferred-size: 0;
          flex-basis: 0;
      -webkit-box-flex: 1;
          -ms-flex-positive: 1;
              flex-grow: 1;
      min-width: 20px;
      margin: 0 2px 3px 0;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: left;
      text-align: right; }

.calendar-popup-container {
  position: relative; }

.calendar-popup {
  position: absolute;
  width: 100%;
  max-width: 400px;
  background: white;
  z-index: 100;
  -webkit-box-shadow: 0 10px 20px -5px rgba(0, 0, 0, 0.35);
          box-shadow: 0 10px 20px -5px rgba(0, 0, 0, 0.35);
  /*
		.records {
			display: block;
			position: absolute;
			min-width: 16px;
			height: 16px;
			right: 3px;
			bottom: 3px;
			text-align: center;
			line-height: 16px;
		}
		*/ }
  .calendar-popup ul {
    padding: 0;
    margin: 0;
    list-style: none; }
    .calendar-popup ul > .week {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -ms-flex-pack: distribute;
          justify-content: space-around;
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch; }
      .calendar-popup ul > .week > .cell {
        max-width: 12.5%;
        -webkit-box-flex: 0;
            -ms-flex: 0 0 12.5%;
                flex: 0 0 12.5%;
        min-width: 40px;
        min-height: 40px;
        line-height: 20px;
        padding: 4px;
        text-align: right; }
  .calendar-popup .cell {
    background: transparent;
    pointer-events: none; }
    .calendar-popup .cell.holiday {
      background: #ffe0b3; }
    .calendar-popup .cell.vacation {
      background: #a5d7a7; }
    .calendar-popup .cell.working {
      background: white;
      pointer-events: auto; }
    .calendar-popup .cell.unworkable {
      background: #c9e7ca; }
    .calendar-popup .cell.selected {
      -webkit-box-shadow: 0 0 0 2px #75787b inset;
              box-shadow: 0 0 0 2px #75787b inset; }
    .calendar-popup .cell:hover {
      -webkit-box-shadow: 0 0 0 1px #75787b inset;
              box-shadow: 0 0 0 1px #75787b inset; }
  .calendar-popup .records {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    font-size: 14px;
    font-weight: 600;
    line-height: 1;
    padding: 0; }

/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
[expandable] {
  position: relative; }

.expandable-placeholder {
  background: #111; }

.expandable-expanding {
  display: block;
  position: absolute;
  z-index: 100000; }

.expandable-parent {
  z-index: 100000; }

.flex-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-family: monospace;
  font-size: .8em; }
  .flex-row > div {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    width: 160px;
    margin-bottom: 10px;
    border: 1px solid grey;
    height: 40px;
    border-radius: 5px;
    margin: 5px; }
  .flex-row > .w50 {
    min-width: 50px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100px;
            flex: 0 0 100px; }
  .flex-row > .w100 {
    min-width: 100px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100px;
            flex: 0 0 100px; }
  .flex-row > .w150 {
    min-width: 150px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100px;
            flex: 0 0 100px; }
  .flex-row > .w200 {
    min-width: 200px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100px;
            flex: 0 0 100px; }
  .flex-row > .w250 {
    min-width: 250px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100px;
            flex: 0 0 100px; }
  .flex-row > .wmax {
    min-width: 100px;
    -webkit-box-flex: 0;
        -ms-flex: 0 1 100%;
            flex: 0 1 100%; }

.form-group {
  position: relative;
  padding-top: 20px;
  border: 1px solid #0000ff;
  border-radius: 6px;
  overflow: hidden; }

.form-label {
  display: block;
  position: absolute;
  width: 100%;
  height: 60px;
  top: 0;
  margin: 0 0 0 0;
  overflow: hidden;
  z-index: 10;
  pointer-events: none; }
  .form-label:before {
    content: '';
    display: block;
    width: 100%;
    height: 2px;
    position: absolute;
    bottom: 0px;
    background: #999; }
  .form-label:after {
    content: '';
    display: block;
    width: 100%;
    height: 4px;
    position: absolute;
    bottom: 0px;
    background: #dc3545;
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
    -webkit-transition: all 250ms ease-in-out;
    transition: all 250ms ease-in-out; }
  .form-label span {
    display: block;
    position: relative;
    width: 100%;
    height: 20px;
    padding: 0 .75rem;
    font-size: .6rem;
    letter-spacing: .075rem;
    line-height: 20px;
    text-transform: uppercase;
    background: #ffffff;
    -webkit-transform: translateY(10px);
            transform: translateY(10px);
    -webkit-transition: all 250ms ease-in-out;
    transition: all 250ms ease-in-out; }
  .form-label sup {
    display: none; }
  .control-empty > .form-label span {
    -webkit-transform: translateY(28px);
            transform: translateY(28px); }
  .control-focus > .form-label span {
    -webkit-transform: translateY(10px);
            transform: translateY(10px); }
  .control-focus > .form-label:after {
    -webkit-transform: translateX(0);
            transform: translateX(0); }
  .control-success > .form-label:before {
    background: #007bff; }
  .control-success > .form-label:after {
    background: #007bff; }
  .control-error > .form-label:before {
    background: #dc3545; }
  .control-error > .form-label:after {
    background: #dc3545; }

.form-control {
  height: 40px;
  border-radius: 0;
  border: 0;
  outline: 0;
  margin: 0; }
  .form-control::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: #ccc; }
  .form-control::-moz-placeholder {
    /* Firefox 19+ */
    color: #ccc; }
  .form-control:-ms-input-placeholder {
    /* IE 10+ */
    color: #ccc; }
  .form-control:-moz-placeholder {
    /* Firefox 18- */
    color: #ccc; }

control-messages {
  display: block;
  position: relative;
  width: 100%;
  margin: 0;
  padding: 0;
  text-transform: uppercase;
  background: #dc3545;
  color: #fff;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: all 250ms ease-in-out;
  transition: all 250ms ease-in-out; }
  .control-error > control-messages {
    max-height: 100px; }
  control-messages > span {
    padding: 0 .75rem;
    font-size: .6rem;
    letter-spacing: .075rem;
    line-height: 20px; }

.btn {
  cursor: pointer;
  -webkit-appearance: none;
  outline: none;
  -webkit-box-shadow: none;
          box-shadow: none; }
  .btn:focus {
    -webkit-appearance: none;
    outline: none;
    -webkit-box-shadow: none;
            box-shadow: none; }
  .btn.busy {
    position: relative;
    z-index: 10;
    background: #007bff;
    border-color: #007bff; }
  .btn.error {
    background: #dc3545;
    border-color: #dc3545; }
  .btn.success {
    background: #28a745;
    border-color: #28a745; }

.input-group-addon {
  position: relative;
  cursor: pointer;
  background: transparent; }
  .input-group-addon [class^='icon-'] {
    font-size: 15px;
    line-height: 20px;
    color: #007bff; }

.interaction-tap {
  display: inline-block;
  position: relative;
  overflow: hidden;
  /*
    &.navbar-toggler-right {
        position: absolute;
    }
    */ }
  .interaction-tap > interaction {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 640px;
    height: 640px;
    border-radius: 50%;
    background: rgba(0, 0, 255, 0.25);
    visibility: hidden;
    opacity: 1;
    -webkit-transform: translateX(-50%) translateY(-50%) scale(0.01);
            transform: translateX(-50%) translateY(-50%) scale(0.01); }
  .interaction-tap.interaction-animate > interaction {
    visibility: visible;
    -webkit-transform: translateX(-50%) translateY(-50%) scale(1);
            transform: translateX(-50%) translateY(-50%) scale(1);
    opacity: 0;
    -webkit-transition: all 1000ms ease-in-out;
    transition: all 1000ms ease-in-out; }

/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
.modal-open {
  overflow: hidden; }
  .modal-open .modal {
    overflow-x: hidden;
    overflow-y: auto; }

.modal {
  position: fixed;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  outline: 0;
  z-index: 2001;
  background: rgba(0, 0, 0, 0.55);
  -webkit-transition-property: all 350ms ease-in-out;
  transition-property: all 350ms ease-in-out;
  -webkit-transition-duration: 250ms;
  transition-duration: 250ms;
  -webkit-transition-delay: 0ms;
  transition-delay: 0ms;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  -webkit-transform-style: preserve-3d;
  /* Chrome, Safari, Opera */
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }
  .modal-dialog {
    display: block;
    position: relative;
    width: 100%;
    max-width: 1200px;
    margin: 0;
    padding: 0;
    border-radius: 6px;
    overflow: hidden;
    -webkit-box-shadow: 0 10px 20px -5px rgba(0, 0, 0, 0.5);
            box-shadow: 0 10px 20px -5px rgba(0, 0, 0, 0.5);
    -webkit-transform: scale(1.1, 1.1);
    transform: scale(1.1, 1.1);
    -webkit-transition-property: all 350ms 350ms ease-in-out;
    transition-property: all 350ms 350ms ease-in-out;
    -webkit-transition-duration: 250ms;
    transition-duration: 250ms;
    -webkit-transition-delay: 0ms;
    transition-delay: 0ms;
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out;
    -webkit-transform-style: preserve-3d;
    /* Chrome, Safari, Opera */
    transform-style: preserve-3d;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
    .modal.fade.in .modal-dialog {
      -webkit-transform: scale(1, 1);
      transform: scale(1, 1); }
  .modal-content {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    background-color: #fff;
    background-clip: padding-box;
    outline: 0; }
  .modal-backdrop {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2000;
    background-color: #000; }
    .modal-backdrop.fade {
      opacity: 0; }
    .modal-backdrop.show {
      opacity: 0.5; }
  .modal-header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    border-bottom: 1px solid #e9ecef;
    padding: 20px 15px;
    background: #6f42c1;
    color: white; }
  .modal-title {
    margin-bottom: 0;
    text-transform: uppercase;
    font-size: 20px;
    font-weight: 400;
    line-height: 22px; }
  .modal-body {
    position: relative;
    -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
            flex: 1 1 auto; }
  .modal-footer {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    padding: 1rem;
    border-top: 1px solid #e9ecef; }
    .modal-footer > :not(:first-child) {
      margin-left: .25rem; }
    .modal-footer > :not(:last-child) {
      margin-right: .25rem; }
  .modal-scrollbar-measure {
    position: absolute;
    top: -9999px;
    width: 50px;
    height: 50px;
    overflow: scroll; }
  .modal .modal-hidden {
    display: none; }
  .modal-visible {
    display: none; }
    .modal .modal-visible {
      display: block; }
  .modal.fade {
    opacity: 0; }
    .modal.fade.in {
      opacity: 1; }
  .modal form {
    margin: 0; }
  @media (max-width: 1023.98px) {
    .modal {
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; }
      .modal .modal-dialog {
        overflow: visible;
        border-radius: 0;
        min-height: 100vh;
        -webkit-box-shadow: none;
                box-shadow: none; } }
  @media (min-width: 1024px) {
    .modal .section-booking .left,
    .modal .section-cart .left {
      min-height: calc(100vh - 40px); }
    .modal-sm .modal-dialog {
      max-width: 520px; } }

a,
a:hover,
a:active,
a:visited,
a:focus {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
  outline: none;
  -webkit-transition: all ease-in-out 350ms;
  transition: all ease-in-out 350ms; }

[ng-click] {
  cursor: pointer;
  outline: none; }

[nav] {
  max-width: 800px;
  margin: auto; }

.nav > .nav-item > .nav {
  -webkit-transition: all ease-in-out 500ms;
  transition: all ease-in-out 500ms; }

.nav > .nav-item.immediate > .nav {
  -webkit-transition: none;
  transition: none; }

@media (max-width: 1023.98px) {
  .nav {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .nav > .nav-item {
      /*
            &.closing,
            &.closed {
                &>.nav {
                    //
                }
            }
            */ }
      .nav > .nav-item > .nav {
        overflow: hidden;
        max-height: 0; }
      .nav > .nav-item.opening > .nav, .nav > .nav-item.opened > .nav {
        max-height: 600px; }
      .nav > .nav-item.opened > .nav {
        max-height: 600px;
        overflow: visible; } }

@media (min-width: 1024px) {
  .nav {
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    margin-bottom: 20px; }
    .nav .nav {
      position: absolute; }
    .nav > .nav-item > .nav {
      visibility: hidden;
      pointer-events: none; }
    .nav > .nav-item.closing > .nav, .nav > .nav-item.closed > .nav {
      opacity: 0; }
    .nav > .nav-item.opening > .nav, .nav > .nav-item.opened > .nav {
      visibility: visible;
      pointer-events: all;
      opacity: 1;
      -webkit-transform: translateY(10px);
              transform: translateY(10px); } }

.nav-link {
  display: block;
  padding: 8px 20px;
  text-align: center;
  white-space: nowrap; }

.nav-0 {
  border: 1px solid #007bff;
  border-radius: 6px; }
  .nav-0 .nav-link {
    font-weight: 900;
    background: transparent;
    color: #007bff; }
  .nav-0 .nav-link:hover,
  .nav-0 .nav-link:active,
  .nav-0 .active > .nav-link {
    background: #007bff;
    color: #ffffff; }
  @media (max-width: 1023.98px) {
    .nav-0 > .nav-item + .nav-item {
      border-top: 1px solid #aaaaff; } }

.nav-1 .nav-link {
  font-weight: 600;
  font-size: 0.9rem;
  background: #eeeeff;
  color: #007bff; }

.nav-1 .nav-link:hover,
.nav-1 .nav-link:active,
.nav-1 .active > .nav-link {
  background: #eeeeff;
  color: #007bff; }

@media (min-width: 1024px) {
  .nav-1 {
    border: 1px solid #007bff;
    -webkit-box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.2);
            box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.2);
    margin-top: 1px; } }

.nav-2 .nav-link {
  font-weight: 200;
  font-size: 0.9rem;
  background: transparent;
  color: #007bff; }

.nav-2 .nav-link:hover,
.nav-2 .nav-link:active,
.nav-2 .active > .nav-link {
  background: #007bff;
  color: #ffffff; }

@media (min-width: 1024px) {
  .nav-2 {
    border: 1px solid #007bff;
    -webkit-box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.2);
            box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.2);
    margin-top: 1px; } }

/* --- end nav --- */
.page {
  display: block;
  position: relative;
  width: 100vw;
  min-height: 100vh; }

page-transition {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  z-index: 10000;
  opacity: 0;
  -webkit-transition: opacity ease-in-out 350ms;
  transition: opacity ease-in-out 350ms;
  pointer-events: none;
  background: white; }
  page-transition.loading {
    -webkit-transition: none;
    transition: none;
    opacity: 1; }

.spinner {
  display: block;
  width: 40px;
  height: 40px;
  background: #007bff;
  -webkit-animation: rotating 750ms ease-in-out infinite;
          animation: rotating 750ms ease-in-out infinite; }

@-webkit-keyframes rotating {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  60% {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }
  100% {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); } }

@keyframes rotating {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  60% {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }
  100% {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); } }

/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
[googlemaps] {
  width: 100%;
  height: 100%;
  background: #007bff; }
  [googlemaps] .cluster {
    position: absolute;
    width: 40px;
    height: 40px;
    background: #007bff;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    border-radius: 50%;
    color: white;
    font-size: 16px; }

/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
[mapbox] {
  width: 100%;
  height: 100%;
  background: #007bff; }

/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
[popuppable] {
  position: relative; }

.popuppable-placeholder {
  background: #111; }

.popuppable-target {
  position: absolute;
  -webkit-transform-origin: 50% 10px;
          transform-origin: 50% 10px;
  -webkit-transform: scale(0.1);
          transform: scale(0.1);
  opacity: 0; }

.popuppable-opening {
  display: block;
  position: absolute;
  z-index: 100000; }

.popuppable-parent {
  z-index: 100000; }

[scrollable-x],
[scrollable-y] {
  position: relative;
  overflow: hidden;
  -webkit-overflow-scroll: touch;
  cursor: pointer; }
  [scrollable-x] > .scrollable-content,
  [scrollable-y] > .scrollable-content {
    display: inline-block;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch; }
  [scrollable-x] > .indicator,
  [scrollable-y] > .indicator {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 20px;
    height: 40px;
    background: grey;
    color: white;
    font-size: 14px;
    border-radius: 1px 0 0 1px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-weight: 700; }

.unselectable {
  -moz-user-select: -moz-none;
  -webkit-user-select: none;
  -o-user-select: none;
  -ms-user-select: none;
      user-select: none; }

.video-player {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 60vh;
  max-height: 700px;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: #007bff; }

.video-item {
  display: block;
  position: relative;
  overflow: hidden;
  max-width: 100%;
  height: 500px;
  margin: 0 auto;
  border-radius: 8px; }
  .video-item video {
    position: relative;
    min-width: 100%;
    height: 100%;
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
    z-index: 0; }
  .video-item img {
    position: absolute;
    min-width: 100%;
    min-height: 100%;
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
    -webkit-transition: all ease-in-out 350ms;
    transition: all ease-in-out 350ms;
    z-index: 1; }
  .video-item:after {
    content: '';
    width: 97px;
    height: 97px;
    background: url("/img/play.png?quality=100") center center/cover;
    top: calc(50% - 48.5px);
    left: calc(50% - 48.5px);
    display: block;
    position: absolute;
    z-index: 2;
    -webkit-transition: all ease-in-out 350ms;
    transition: all ease-in-out 350ms; }
  .video-item:hover img {
    -webkit-transform: translateX(-50%) translateY(-50%) scale(1.05);
            transform: translateX(-50%) translateY(-50%) scale(1.05); }
  .playing > .video-item img {
    opacity: 0; }
  .playing > .video-item:after {
    opacity: 0; }
  @media (max-width: 1023.98px) {
    .video-item {
      margin-bottom: 15px; } }
